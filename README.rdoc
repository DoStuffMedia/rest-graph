= rest-graph 1.1.0
by Cardinal Blue ( http://cardinalblue.com )

== LINKS:

* {github}[http://github.com/cardinalblue/rest-graph]
* {rubygems}[http://rubygems.org/gems/rest-graph]
* {rdoc}[http://rdoc.info/projects/cardinalblue/rest-graph]

== DESCRIPTION:

 super simple facebook open graph api client

== FEATURES:

* simple graph api call
* simple fql call
* utility to extract access_token and check sig in cookies

== SYNOPSIS:

 require 'rest-graph'

 # every option is optional!!
 rg = RestGraph.new(:access_token => '...',
                    :graph_server => 'https://graph.facebook.com/',
                    :fql_server   => 'https://api.facebook.com/',
                    :accept       => 'text/javascript',
                    :lang         => 'en-us', # this affect search
                    :auto_decode  => true,    # decode by json
                    :app_id       => '123',
                    :secret       => '1829')

 rg.get('me')       # GET https://graph.facebook.com/me?access_token=...
 rg.get('4/likes')  # GET https://graph.facebook.com/4/likes?access_token=...

 # GET https://graph.facebook.com/search?q=taiwan&access_token=...
 rg.get('search', :q => 'taiwan')

 # GET https://graph.facebook.com/me?metadata=1&access_token=...
 rg.get('me', :metadata => '1')

 # POST https://graph.facebook.com/feed/me?message=bread%21&access_token=...
 rg.post('feed/me', :message => 'bread!')

 # for fully blown cookies hash
 rg = RestGraph.new(:app_id => '123', :secret => '1829')
 rg.parse_cookies!(cookies) # auto save access_token if sig checked
 rg.data['uid']             # => facebook uid

 # fql query, same as:
 # GET https://api.facebook.com/method/fql.query?query=
 #     SELECT+name+FROM+page+WHERE+page_id%3D%22123%22&
 #     format=json&access_token=...
 rg.fql('SELECT name FROM page WHERE page_id="123"')

 # default setting:
 class RestGraph
   def self.default_app_id
     '456'
   end

   def self.default_secret
     'category theory'
   end
 end

 # auto load config
 require 'rest-graph'
 require 'rest-graph/auto_load'  # under Rails, load config/rest-graph.yaml
 RestGraph.new                   # all default options would honor config
 RestGraph.new(:app_id => '123') # default could be override as well

 # manually load config
 require 'rest-graph/load_config'
 RestGraph::LoadConfig.load_config!('path/to/rest-graph.yaml', 'env')

 # see test/config/rest-graph.yaml for an example for config

== REQUIREMENTS:

* tested with MRI 1.8.7 and 1.9.1
* gem install rest-client
* gem install json      (optional)
* gem install json_pure (optional)
* gem install rack      (optional, to parse access_token in HTTP_COOKIE)
* gem install em-http   (optional, to do concurrent http request)

== INSTALL:

 > gem install rest-graph
 # or if you want rails plugin and bleeding edge
 > script/plugin install git://github.com/cardinalblue/rest-graph.git

== LICENSE:

  Apache License 2.0

  Copyright (c) 2010, Cardinal Blue

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
